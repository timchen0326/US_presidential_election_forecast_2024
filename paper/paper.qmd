---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - First author
  - Another author
thanks: "Code and data are available at: [https://github.com/RohanAlexander/starter_folder](https://github.com/RohanAlexander/starter_folder)."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false
# Set a CRAN mirror
# Set a specific CRAN mirror (this example uses the US CRAN mirror)
options(repos = c(CRAN = "https://cran.rstudio.com/"))

# Example of installing a package after setting the mirror
install.packages("tidyverse")


library(tidyverse)
# Install janitor package if not installed
install.packages("janitor")

# Load the janitor package
library(janitor)

install.packages("caret")
install.packages("ROCR")
install.packages("rstanarm")
library(rstanarm)
install.packages("modelsummary")
library(modelsummary)



```


# Introduction

Overview paragraph

Estimand paragraph

Results paragraph

Why it matters paragraph

Telegraphing paragraph: The remainder of this paper is structured as follows. @sec-data....






# Data {#sec-data}

## Overview

We use the statistical programming language R [@citeR].... Our data [@shelter].... Following @tellingstories, we consider...

Overview text

## Measurement
	
Some paragraphs about how we go from a phenomena in the world to an entry in the dataset.

## Outcome variables

Add graphs, tables and text. Use sub-sub-headings for each outcome variable or update the subheading to be singular.



Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}
# Load necessary libraries
library(dplyr)
library(tidyr)

# Load the dataset
polls <- read.csv(here::here("data/02-analysis_data/analysis_data.csv"))



```

```{r}

polls |>
  ggplot(aes(x = population, fill = answer)) +
  stat_count(position = "dodge") +
  theme_minimal() +
  labs(
    x = "Population",
    y = "Number of respondents",
    fill = "Voted for"
  ) +
  coord_flip() +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "bottom")
```

```{r}
# Finding Median of Sample Size
median_sample_size <- median(polls$sample_size, na.rm = TRUE)
print(median_sample_size)

# The U.S. uses an Electoral College system, where each state is assigned a certain number of electoral votes based on its population (each state gets a number of electors equal to its total number of Senators and Representatives in Congress).
# Most states use a winner-takes-all system, where the candidate who wins the popular vote in the state gets all its electoral votes. (Exceptions: Nebraska and Maine, which allocate electoral votes proportionally.)
# A total of 538 electoral votes are available. To win the presidency, a candidate must secure at least 270 electoral votes.

# Differentiating sample sizes in presidential election polls is important because larger samples generally provide more reliable results with smaller margins of error, while smaller samples may result in less precise and potentially skewed outcomes. Additionally, larger sample sizes better capture the diversity of key demographic groups, leading to more accurate reflections of voter behavior.
```


```{r}

library(ggplot2)
library(dplyr)

library(ggplot2)
library(dplyr)
library(tidyr)

# Define population levels (adjust based on your actual data)
population_levels <- c("Adults", "Voters", "Likely Voters", "Registered Voters")  # Update these based on your dataset

# Ensure all factor levels are present and handle missing combinations
polls_clean <- polls %>%
  mutate(
    population = factor(population, levels = population_levels),
    sample_category = ifelse(sample_size < 1006, "Less than 1006", "1006 or more"),
    answer = as.factor(answer)  # Convert answer to factor if it represents candidates
  ) %>%
  complete(population, answer, sample_category, fill = list(n = 0))  # Fill missing combinations

# Plot with facet_wrap
polls_clean %>%
  ggplot(aes(x = population, fill = answer)) +
  stat_count(position = "dodge") +
  theme_minimal() +
  labs(
    x = "Population",
    y = "Number of respondents",
    fill = "Voted for"
  ) +
  coord_flip() +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  facet_wrap(~sample_category, scales = "free_y")


```


```{r}
set.seed(304)

polls_reduced <- 
  polls_clean |> 
  slice_sample(n = 1000)

political_preferences <-
  stan_glm(
    answer ~  + sample_category + population,
    data = polls_reduced,
    family = binomial(link = "logit"),
    prior = normal(location = 0, scale = 2.5, autoscale = TRUE),
    prior_intercept = 
      normal(location = 0, scale = 2.5, autoscale = TRUE),
    seed = 853
  )

saveRDS(
  political_preferences,
  file = "political_preferences.rds"
)

```


```{r}
political_preferences <-
  readRDS(file = "political_preferences.rds")

```

```{r}
modelsummary(
  list(
    "Support Biden" = political_preferences
  ),
  statistic = "mad"
  )

```


```{r}
modelplot(political_preferences, conf_level = 0.9) +
  labs(x = "90 per cent credibility interval")
```

Talk way more about it. 

## Predictor variables

Add graphs, tables and text.

Use sub-sub-headings for each outcome variable and feel free to combine a few into one if they go together naturally.








# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

first_model <-
  readRDS(file = here::here("models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
  list(
    "First model" = first_model
  ),
  statistic = "mad",
  fmt = 2
)
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

```



\newpage


# References


